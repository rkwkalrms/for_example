/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.96
 * Generated at: 2024-01-21 13:51:52 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class Login_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("	<meta charset=\"UTF-8\">\r\n");
      out.write("	<title>로그인 | 라이프스타일 슈퍼앱, 오늘의집</title>\r\n");
      out.write("	<link rel=\"stylesheet\" href=\"css/Login.css\">\r\n");
      out.write("	<link rel=\"stylesheet\" as=\"style\" crossorigin href=\"https://cdn.jsdelivr.net/gh/orioncactus/pretendard@v1.3.9/dist/web/static/pretendard.min.css\" />\r\n");
      out.write("	<script src=\"js/jquery-3.7.1.min.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<div class=\"page_all\">\r\n");
      out.write("		<main class=\"main_tl\">\r\n");
      out.write("			<div class=\"login_tl\">\r\n");
      out.write("				<div class=\"login_area\">\r\n");
      out.write("					<a href=\"#\">\r\n");
      out.write("						<img class=\"logo\" src=\"images/today_house_logo.png\"/>\r\n");
      out.write("						<img class=\"logo\" src=\"images/logo.png\"/>						\r\n");
      out.write("					</a>\r\n");
      out.write("					<form action=\"LoginServlet\" method=\"post\" class=\"input_area\">\r\n");
      out.write("						<div class=\"change_color\">\r\n");
      out.write("							<input type=\"text\" name=\"email\" class=\"login_email\" placeholder=\"이메일\"/>\r\n");
      out.write("						</div>\r\n");
      out.write("						<div class=\"change_color\">\r\n");
      out.write("							<input type=\"password\" name=\"pw\" class=\"login_password\" placeholder=\"비밀번호\"/>\r\n");
      out.write("						</div>\r\n");
      out.write("						<button class=\"input_submit\">로그인</button>\r\n");
      out.write("						<section class=\"re\">\r\n");
      out.write("							<a href=\"Mypage_setting_change_pw.jsp\" class=\"re_pw\">비밀번호 재설정</a>\r\n");
      out.write("							<a href=\"Create_account.html\" class=\"will_be_member\">회원가입</a>\r\n");
      out.write("						</section>\r\n");
      out.write("					</form>\r\n");
      out.write("					<input type=\"hidden\" name=\"user[email]\" value=\"\">\r\n");
      out.write("					<input type=\"hidden\" name=\"user[password]\" value=\"\">\r\n");
      out.write("					<section>\r\n");
      out.write("						<div class=\"sns_login_button\">SNS계정으로 간편 로그인/회원가입</div>\r\n");
      out.write("						<a datatpye=\"kakao\" class=\"sns\"  href=\"https://accounts.kakao.com/login/?continue=https%3A%2F%2Fkauth.kakao.com%2Foauth%2Fauthorize%3Fproxy%3DeasyXDM_Kakao_ftvt2rd1m8g_provider%26ka%3Dsdk%252F1.43.1%2520os%252Fjavascript%2520sdk_type%252Fjavascript%2520lang%252Fko-KR%2520device%252FWin32%2520origin%252Fhttps%25253A%25252F%25252Fohou.se%26origin%3Dhttps%253A%252F%252Fohou.se%26response_type%3Dcode%26redirect_uri%3Dkakaojs%26state%3D44f6q4wgzli4ycybjakcgh%26through_account%3Dtrue%26client_id%3D3019c756ec77dd7e0a24e56d9d784f77&talk_login=hidden#login\" target=\"_blank\">\r\n");
      out.write("							<svg width=\"48\" height=\"48\" viewBox=\"0 0 48 48\" preserveAspectRatio=\"xMidYMid meet\"><g fill=\"none\" fill-rule=\"evenodd\"><path fill=\"#FFEB00\" d=\"M0 24C0 10.745 10.745 0 24 0s24 10.745 24 24-10.745 24-24 24S0 37.255 0 24z\"></path><path fill=\"#3C2929\" d=\"M24 11.277c8.284 0 15 5.306 15 11.85 0 6.545-6.716 11.85-15 11.85-.92 0-1.822-.066-2.697-.191l-6.081 4.105a.43.43 0 0 1-.674-.476l1.414-5.282C11.777 31.031 9 27.335 9 23.127c0-6.544 6.716-11.85 15-11.85zm6.22 8.407c-.416 0-.718.297-.718.707v5.939c0 .41.289.686.718.686.41 0 .718-.295.718-.686v-1.932l.515-.526 1.885 2.57c.277.374.426.54.691.568.037.003.075.005.112.005.154 0 .66-.04.716-.563.038-.293-.137-.52-.348-.796l-2.043-2.675 1.727-1.743.176-.196c.234-.26.353-.39.353-.587.009-.422-.34-.652-.687-.661-.274 0-.457.15-.57.262l-2.528 2.634v-2.3c0-.422-.288-.706-.717-.706zm-9.364 0c-.56 0-.918.432-1.067.837l-2.083 5.517a.84.84 0 0 0-.065.315c0 .372.31.663.706.663.359 0 .578-.162.69-.51l.321-.97h2.999l.313.982c.111.335.34.498.7.498.367 0 .655-.273.655-.62 0-.056-.017-.196-.081-.369l-2.019-5.508c-.187-.53-.577-.835-1.069-.835zm-2.92.064h-4.452c-.417 0-.642.337-.642.654 0 .3.168.652.642.652h1.51v5.21c0 .464.274.752.716.752.443 0 .718-.288.718-.751v-5.21h1.508c.474 0 .643-.352.643-.653 0-.317-.225-.654-.643-.654zm7.554-.064c-.442 0-.717.287-.717.75v5.707c0 .497.28.794.75.794h2.674c.434 0 .677-.321.686-.627a.642.642 0 0 0-.17-.479c-.122-.13-.3-.2-.516-.2h-1.99v-5.195c0-.463-.274-.75-.717-.75zm-4.628 1.306l.008.01 1.083 3.265h-2.192L20.842 21a.015.015 0 0 1 .028 0z\"></path></g></svg>\r\n");
      out.write("						</a>\r\n");
      out.write("						<a datatpye=\"naver\" class=\"sns\" href=\"https://nid.naver.com/oauth2.0/authorize?client_id=OwxOJX0gYfOostweRfGd&redirect_uri=https%3A%2F%2Fohou.se%2Fusers%2Fauth%2Fnaver%2Fcallback&response_type=code&state=a00e842733d565e7b0df6094f7c6b37c6b10b506357ce617&svctype=0\" target=\"_blank\">\r\n");
      out.write("							<svg width=\"48\" height=\"48\" viewBox=\"0 0 48 48\" preserveAspectRatio=\"xMidYMid meet\"><g fill=\"none\" fill-rule=\"evenodd\"><path fill=\"#00C63B\" d=\"M0 24C0 10.745 10.745 0 24 0s24 10.745 24 24-10.745 24-24 24S0 37.255 0 24z\"></path><path fill=\"#FFF\" d=\"M21 25.231V34h-7V15h7l6 8.769V15h7v19h-7l-6-8.769z\"></path></g></svg>\r\n");
      out.write("						</a>\r\n");
      out.write("					</section>\r\n");
      out.write("					<a herf=\"#\" class=\"login_problem\">로그인에 문제가 있으신가요?</a>\r\n");
      out.write("					<section class=\"advice\">\r\n");
      out.write("						<a href=\"https://contents.ohou.se/projects?writer=self\" class=\"bb\" target=\"_blank\">남의집들이 같이 갈래?</a>\r\n");
      out.write("					</section>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("			<footer>\r\n");
      out.write("					© bucketplace, Co., Ltd. . All Rights Reserved\r\n");
      out.write("			</footer>\r\n");
      out.write("		</main>\r\n");
      out.write("	</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
